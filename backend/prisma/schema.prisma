// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Enums
enum HemophiliaType {
  A
  B
  C
  Unknown
}

enum HemophiliaSeverity {
  Mild
  Moderate
  Severe
  Unknown
}

enum BleedSeverity {
  Mild
  Moderate
  Severe
  Unknown
}

enum InfusionType {
  Routine
  OnDemand
  PreExercise
  PostExercise
  Other
}

// Models
model User {
  id                 String             @id @default(uuid())
  username           String             @unique
  email              String             @unique
  password           String
  hemophiliaType     HemophiliaType     @default(Unknown)
  hemophiliaSeverity HemophiliaSeverity @default(Unknown)
  medicineType       String             @default("Unknown")
  dosageAmount       Int                @default(0)
  dosageFrequency    String             @default("Unknown")
  refreshToken       String?
  profilePic         String?
  createdAt          DateTime           @default(now())

  // Relations
  bleeds    Bleed[]    @relation("UserBleeds")
  infusions Infusion[] @relation("UserInfusions")
}

model Bleed {
  id                String        @id @default(uuid())
  startDate         DateTime      @default(now())
  endDate           DateTime?
  bodyPart          String        @default("Unknown")
  severity          BleedSeverity
  description       String?
  cause             String?
  mobilityImpact    String?
  usedCrutches      Boolean?
  ptStartDate       DateTime?
  ptNotes           String?
  isRebleed         Boolean?
  relatedBleedId    String?
  timeToInfuseHours Int?
  preventable       Boolean?
  activityAtTime    String?
  weatherNotes      String?

  // Foreign key to User
  userId String
  user   User   @relation("UserBleeds", fields: [userId], references: [id])

  // Optional link to infusions
  infusions Infusion[] @relation("BleedInfusions")
}

model Infusion {
  id        String       @id @default(uuid())
  date      DateTime     @default(now())
  type      InfusionType
  product   String       @default("Unknown")
  doseUnits Int          @default(0)
  notes     String?

  // Foreign key to User
  userId String
  user   User   @relation("UserInfusions", fields: [userId], references: [id])

  // Optional link to a Bleed
  bleedId String?
  bleed   Bleed?  @relation("BleedInfusions", fields: [bleedId], references: [id])
}
